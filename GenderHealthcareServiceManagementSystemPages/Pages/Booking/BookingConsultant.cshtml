@page
@model GenderHealthcareServiceManagementSystemPages.Pages.BookingConsultantModel
@{
    ViewData["Title"] = "Đặt lịch tư vấn - Gender Healthcare";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/BookingConsultant.css" />
</head>
<body>
    @if (!ViewData.ModelState.IsValid)
    {
        <div id="errorModal" class="modal" style="display:block;">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title">
                        <span class="error-icon">⚠️</span>
                        Có lỗi xảy ra
                    </h2>
                    <span class="close" onclick="closeErrorModal()">&times;</span>
                </div>
                <div class="modal-body">
                    <p class="modal-description">Vui lòng kiểm tra lại thông tin và thử lại.</p>
                    <div id="errorList" class="error-list">
                        <ul>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="modal-btn" onclick="closeErrorModal()">Đã hiểu</button>
                </div>
            </div>
        </div>
    }
    <div class="container">
        <div class="booking-card">
            <h1 class="page-title">Đặt lịch tư vấn</h1>
            <p class="page-subtitle">Chọn chuyên gia tư vấn phù hợp với nhu cầu của bạn</p>
            <form method="post">
                <div class="form-group">
                    <label class="form-label">Chọn chuyên gia tư vấn</label>
                    <div class="consultant-grid">
                        @foreach (var consultantInf in Model.ConsultantInfos)
                        {
                            <div class="consultant-card" onclick="selectConsultant(this, '@consultantInf.ConsultantId')">
                                <div class="consultant-avatar">
                                    @(consultantInf.Consultant.Gender == "Female" ? "👩‍⚕️" : "👨‍⚕️")
                                </div>
                                <h3>@consultantInf.Consultant.FullName</h3>
                                <p>@consultantInf.Specialization</p>
                                <p><strong>@consultantInf.ExperienceYears năm kinh nghiệm</strong></p>
                            </div>
                        }
                    </div>
                    <input type="hidden" name="SelectedConsultant" id="selectedConsultant" />
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="appointmentDate">Ngày hẹn</label>
                        <input type="date" id="appointmentDate" name="AppointmentDate" class="form-input" required />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Giờ hẹn</label>

                        <div class="time-period-section">
                            <h4 class="period-title">Buổi sáng</h4>
                            <div class="time-slots-row">
                                <div class="time-slot" onclick="selectTimeSlot(this, '09:00')">09:00</div>
                                <div class="time-slot" onclick="selectTimeSlot(this, '10:00')">10:00</div>
                                <div class="time-slot" onclick="selectTimeSlot(this, '11:00')">11:00</div>
                            </div>
                        </div>

                        <div class="time-period-section">
                            <h4 class="period-title">Buổi chiều</h4>
                            <div class="time-slots-row">
                                <div class="time-slot" onclick="selectTimeSlot(this, '14:00')">14:00</div>
                                <div class="time-slot" onclick="selectTimeSlot(this, '15:00')">15:00</div>
                                <div class="time-slot" onclick="selectTimeSlot(this, '16:00')">16:00</div>
                            </div>
                        </div>

                        <input type="hidden" name="AppointmentTime" id="selectedTime" />
                    </div>
                </div>
@* 
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="fullName">Họ và tên *</label>
                        <input type="text" id="fullName" name="FullName" class="form-input" required />
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="phoneNumber">Số điện thoại *</label>
                        <div class="phone-input-container">
                            <div class="country-selector-static">
                                <img src="https://flagcdn.com/w20/vn.png" alt="VN" class="country-flag-img">
                                <span class="country-code">+84</span>
                            </div>
                            <input type="tel" id="phoneNumber" name="PhoneNumber" class="form-input phone-number-input" placeholder="EX: 0912333123" required />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label" for="email">Email *</label>
                    <input type="email" id="email" name="Email" class="form-input" required />
                </div>

                <div class="form-group">
                    <label class="form-label" for="notes">Ghi chú</label>
                    <textarea id="notes" name="Notes" class="form-textarea" placeholder="Mô tả chi tiết về tình trạng hoặc câu hỏi bạn muốn tư vấn..."></textarea>
                </div> *@

                <button type="submit" class="submit-btn" id="submitBtn">
                    <span class="btn-text">📅 Đặt lịch hẹn</span>
                    <span class="btn-loading" style="display: none;">
                        <div class="spinner"></div>
                        Đang xử lý...
                    </span>
                </button>
            </form>
        </div>
    </div>

    <script>
        function closeErrorModal() {
            const modal = document.getElementById("errorModal");
            if (modal) modal.style.display = "none";
        }
        function selectConsultant(element, consultantId) {
            document.querySelectorAll('.consultant-card').forEach(card => {
                card.classList.remove('selected');
            });

            element.classList.add('selected');
            document.getElementById('selectedConsultant').value = consultantId;
        }

        function selectTimeSlot(element, time) {
            // Nếu slot bị disabled
            if (element.classList.contains('disabled') || element.getAttribute('data-available') === 'false') {
                return; // Thoát
            }

            // Bỏ class 'selected' ra
            document.querySelectorAll('.time-slot').forEach(slot => {
                slot.classList.remove('selected');
            });

            // Gắn class 'selected' vào slot mà người dùng vừa chọn
            element.classList.add('selected');

            // Gán giá trị giờ hẹn vào hidden input
            document.getElementById('selectedTime').value = time;
        }

        // Chặn ng dùng nhập ngày quá khứ
        document.getElementById('appointmentDate').min = new Date().toISOString().split('T')[0];

        document.getElementById('appointmentDate').addEventListener('change', function () {
            const date = encodeURIComponent(this.value);
            if (!date) return;

            fetch(`/Booking/BookingConsultant?handler=UnavailableSlots&date=${date}`)
                .then(res => res.json())
                .then(disabledSlots => {
                    document.querySelectorAll('.time-slot').forEach(slot => {
                        const time = slot.textContent.trim();
                        if (disabledSlots.includes(time)) {
                            slot.classList.add('disabled');
                            slot.setAttribute('data-available', 'false');
                        } else {
                            slot.classList.remove('disabled');
                            slot.setAttribute('data-available', 'true');
                        }
                    });
                });
        });

        // validate form
        document.querySelector('form').addEventListener('submit', function (e) {
            const consultant = document.getElementById('selectedConsultant').value;
            const time = document.getElementById('selectedTime').value;

            if (!consultant) {
                alert('Vui lòng chọn chuyên gia tư vấn');
                e.preventDefault();
                return;
            }

            if (!time) {
                alert('Vui lòng chọn giờ hẹn');
                e.preventDefault();
                return;
            }
        });
    </script>
</body>
</html>
