@model GenderHealthcareServiceManagementSystemPages.Pages.Feedbacks.IndexModel

@{
    var avg = Model.FeedbackStats.AverageRating;
    var total = Model.FeedbackStats.TotalFeedbacks;
    var counts = Model.FeedbackStats.RatingCounts;

    int fullStars = (int)Math.Floor(avg);
    bool hasHalfStar = avg - fullStars >= 0.25 && avg - fullStars < 0.75;
    int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
}

<style>
    .card-all {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0, 0, 0, 0.125);
        border-radius: 8px;
    }

    .card-all-body {
        flex: 1 1 auto;
        padding: 1rem 1rem;
    }
</style>

<div class="row d-flex">
    <!-- Left: Average Rating -->
    <div class="row d-flex flex-column col-4">

        <!-- Average block -->
        <div class="col-md-12">
            <h5 class="fw-bold">Đánh giá</h5>
            <div class="card-all p-4 text-center shadow-sm">
                <h1 class="display-5">@avg.ToString("0.0")</h1>
                <div class="mb-2 fs-4 text-warning">
                    @for (int i = 0; i < fullStars; i++)
                    {
                        <i class="bi bi-star-fill"></i>
                    }
                    @if (hasHalfStar)
                    {
                        <i class="bi bi-star-half"></i>
                    }
                    @for (int i = 0; i < emptyStars; i++)
                    {
                        <i class="bi bi-star text-secondary"></i>
                    }
                </div>
                <small class="text-muted">@total Ratings</small>
            </div>
        </div>

        <!-- Rating breakdown -->
        <div class="col-md-12 mt-4">
            <div class="card-all p-4 text-center shadow-sm" style="line-height:2">
                @for (int i = 5; i >= 1; i--)
                {
                    var count = counts.ContainsKey(i) ? counts[i] : 0;
                    var percent = total > 0 ? (count * 100 / total) : 0;

                    <div class="d-flex align-items-center justify-content-center mb-2">
                        <span class="me-2" style="width: 30px;">@i.0</span>
                        <div class="progress flex-grow-1 me-2" style="height: 8px; background-color: #C8B6FF;">
                            <div class="progress-bar" role="progressbar"
                                 style="width:@percent%; background-color:#7652E3;"></div>
                        </div>
                        <span style="width: 70px;" class="text-muted text-end">@count Reviews</span>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Right: Feedback list -->
    <div class="col-md-8">
        <h5 class="fw-bold">Phản hồi của khách hàng</h5>

        @foreach (var item in Model.FeedbackDisplays)
        {
            int full = item.Rating;
            int empty = 5 - full;
            <!-- Fake sample review -->
            <div class="card-all mb-3 p-3 shadow-sm">
                <div class="d-flex align-items-center mb-2">
                    <div class="rounded-circle d-flex justify-content-center align-items-center me-2"
                         style="width: 40px; height: 40px; background-color: #C8B6FF; color: white;">
                        @item.ReviewerName.FirstOrDefault()
                    </div>
                    <div>
                        <strong>@item.ReviewerName</strong><br />
                        <small class="text-muted">@item.CreatedAt.ToString("dd-MM-yyyy")</small>
                    </div>
                    <div class="ms-auto text-warning">
                        @for (int i = 0; i < full; i++)
                        {
                            <i class="bi bi-star-fill"></i>
                        }
                        @for (int i = 0; i < empty; i++)
                        {
                            <i class="bi bi-star text-secondary"></i>
                        }
                    </div>
                </div>
                <p class="mb-0">@item.FeedbackText</p>
                @if (Model.CurrentRole == "Admin")
                {
                    <!-- Nút mở modal xác nhận -->
                    <button type="button" class="btn btn-sm btn-outline-danger mt-2" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal-@item.FeedbackId">
                        Xoá
                    </button>

                    <!-- Modal xác nhận xóa -->
                    <div class="modal fade" id="deleteConfirmModal-@item.FeedbackId" tabindex="-1" aria-labelledby="deleteConfirmModalLabel-@item.FeedbackId" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content border-danger">
                                <div class="modal-header bg-danger text-white">
                                    <h5 class="modal-title" id="deleteConfirmModalLabel-@item.FeedbackId">Xác nhận xoá</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                                </div>
                                <div class="modal-body">
                                    Bạn có chắc chắn muốn xoá phản hồi này không?
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>

                                    <!-- Form xoá thực sự nằm trong modal -->
                                    <form method="post" asp-page-handler="Delete" asp-route-id="@item.FeedbackId">
                                        <button type="submit" class="btn btn-danger">Xác nhận xoá</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        }
    </div>
</div>