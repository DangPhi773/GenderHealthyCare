@page
@model GenderHealthcareServiceManagementSystemPages.Pages.ServiceManagement.CreateModel
@{
    ViewData["Title"] = "Thêm dịch vụ mới";
}

<main class="create-service-page">
    <div class="container">
        <!-- Header -->
        <div class="page-header">
            <div class="breadcrumb">
                <a asp-page="./Index">Quản lý dịch vụ</a>
                <span>/</span>
                <span>Thêm mới</span>
            </div>
            <div class="header-content">
                <div class="header-icon">
                    <i class="bi bi-plus-circle"></i>
                </div>
                <div class="header-info">
                    <h1>Thêm dịch vụ mới</h1>
                    <p>Tạo dịch vụ chăm sóc sức khỏe mới trong hệ thống</p>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="content-wrapper">
            <!-- Form Card -->
            <div class="form-card">
                <div class="card-header_Create">
                    <div class="card-icon">
                        <i class="bi bi-heart-pulse"></i>
                    </div>
                    <h2>Thông tin dịch vụ</h2>
                </div>

                <form method="post" id="createServiceForm">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <div class="form-content">
                        <!-- Service Name -->
                        <div class="form-group">
                            <label asp-for="Service.Name" class="form-label">
                                <i class="bi bi-tag"></i>
                                Tên dịch vụ
                                <span class="required">*</span>
                            </label>
                            <div class="input-wrapper">
                                <input asp-for="Service.Name" class="form-control"
                                       placeholder="Nhập tên dịch vụ (ví dụ: Khám sức khỏe tổng quát)"
                                       maxlength="200" />
                                <div class="input-icon">
                                    <i class="bi bi-check-circle success-icon"></i>
                                    <i class="bi bi-x-circle error-icon"></i>
                                </div>
                            </div>
                            <span asp-validation-for="Service.Name" class="validation-message"></span>
                            <div class="character-count">
                                <span id="nameCount">0</span>/200 ký tự
                            </div>
                        </div>

                        <!-- Service Description -->
                        <div class="form-group">
                            <label asp-for="Service.Description" class="form-label">
                                <i class="bi bi-file-text"></i>
                                Mô tả dịch vụ
                            </label>
                            <div class="input-wrapper">
                                <textarea asp-for="Service.Description" class="form-control textarea"
                                          rows="4" maxlength="1000"
                                          placeholder="Mô tả chi tiết về dịch vụ, quy trình thực hiện, lợi ích..."></textarea>
                                <div class="textarea-resize-handle">
                                    <i class="bi bi-arrows-angle-expand"></i>
                                </div>
                            </div>
                            <span asp-validation-for="Service.Description" class="validation-message"></span>
                            <div class="character-count">
                                <span id="descCount">0</span>/1000 ký tự
                            </div>
                        </div>

                        <!-- Service Price -->
                        <div class="form-group">
                            <label asp-for="Service.Price" class="form-label">
                                <i class="bi bi-currency-dollar"></i>
                                Giá dịch vụ
                                <span class="required">*</span>
                            </label>
                            <div class="price-input-wrapper">
                                <div class="input-wrapper">
                                    <input asp-for="Service.Price" class="form-control price-input"
                                           type="number" min="0" step="1000"
                                           placeholder="0" />
                                    <div class="currency-suffix">VND</div>
                                    <div class="input-icon">
                                        <i class="bi bi-check-circle success-icon"></i>
                                        <i class="bi bi-x-circle error-icon"></i>
                                    </div>
                                </div>
                                <div class="price-suggestions">
                                    <button type="button" class="price-btn" data-price="500000">500K</button>
                                    <button type="button" class="price-btn" data-price="1000000">1M</button>
                                    <button type="button" class="price-btn" data-price="2000000">2M</button>
                                    <button type="button" class="price-btn" data-price="5000000">5M</button>
                                </div>
                            </div>
                            <span asp-validation-for="Service.Price" class="validation-message"></span>
                            <div class="price-preview" id="pricePreview"></div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                <i class="bi bi-check-circle"></i>
                                <span>Tạo dịch vụ</span>
                                <div class="btn-loading">
                                    <i class="bi bi-hourglass-split"></i>
                                </div>
                            </button>

                            <button type="button" class="btn btn-secondary" id="previewBtn">
                                <i class="bi bi-eye"></i>
                                Xem trước
                            </button>

                            <a asp-page="./Index" class="btn btn-outline">
                                <i class="bi bi-arrow-left"></i>
                                Quay lại
                            </a>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Preview Card -->
            <div class="preview-card" id="previewCard">
                <div class="card-header_Create">
                    <div class="card-icon">
                        <i class="bi bi-eye"></i>
                    </div>
                    <h2>Xem trước dịch vụ</h2>
                </div>

                <div class="preview-content">
                    <div class="service-preview">
                        <div class="preview-header">
                            <div class="service-icon">
                                <i class="bi bi-heart-pulse"></i>
                            </div>
                            <div class="service-info">
                                <h3 id="previewName">Tên dịch vụ</h3>
                                <div class="status-badge active">
                                    <i class="bi bi-check-circle"></i>
                                    <span>Hoạt động</span>
                                </div>
                            </div>
                        </div>

                        <div class="preview-body">
                            <div class="preview-description">
                                <h4><i class="bi bi-file-text"></i> Mô tả</h4>
                                <p id="previewDescription">Chưa có mô tả</p>
                            </div>

                            <div class="preview-price">
                                <h4><i class="bi bi-currency-dollar"></i> Giá dịch vụ</h4>
                                <div class="price-display" id="previewPriceDisplay">0 VND</div>
                            </div>

                            <div class="preview-meta">
                                <div class="meta-item">
                                    <i class="bi bi-calendar-plus"></i>
                                    <span>Ngày tạo: <span id="currentDate"></span></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Success Modal -->
        <div class="modal-overlay" id="successModal">
            <div class="modal-content success">
                <div class="modal-icon">
                    <i class="bi bi-check-circle"></i>
                </div>
                <h3>Tạo dịch vụ thành công!</h3>
                <p>Dịch vụ mới đã được thêm vào hệ thống</p>
                <div class="modal-actions">
                    <a asp-page="./Index" class="btn btn-primary">
                        <i class="bi bi-list"></i>
                        Xem danh sách
                    </a>
                    <button type="button" class="btn btn-secondary" onclick="location.reload()">
                        <i class="bi bi-plus-circle"></i>
                        Thêm dịch vụ khác
                    </button>
                </div>
            </div>
        </div>
    </div>
</main>

<style>
    /* Main Layout */
    .create-service-page {
        min-height: 100vh;
        background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 50%, #f0fdf4 100%);
        padding: 2rem 0;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Header */
    .page-header {
        margin-bottom: 2rem;
    }

    .breadcrumb {
        font-size: 0.875rem;
        color: #64748b;
        margin-bottom: 1rem;
    }

        .breadcrumb a {
            color: #0ea5e9;
            text-decoration: none;
        }

            .breadcrumb a:hover {
                text-decoration: underline;
            }

    .header-content {
        display: flex;
        align-items: center;
        gap: 1rem;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    }

    .header-icon {
        width: 3.5rem;
        height: 3.5rem;
        background: linear-gradient(135deg, #0ea5e9, #0284c7);
        color: white;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.75rem;
        flex-shrink: 0;
    }

    .header-info h1 {
        font-size: 1.75rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.25rem;
    }

    .header-info p {
        color: #64748b;
        margin: 0;
    }

    /* Content Wrapper */
    .content-wrapper {
        display: grid;
        grid-template-columns: 1fr 400px;
        gap: 2rem;
        align-items: start;
    }

    /* Form Card */
    .form-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .card-header_Create {
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        padding: 1.5rem;
        border-bottom: 1px solid #e2e8f0;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .card-icon {
        width: 2.5rem;
        height: 2.5rem;
        background: linear-gradient(135deg, #0ea5e9, #0284c7);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.25rem;
    }

    .card-header_Create h2 {
        font-size: 1.25rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0;
    }

    .form-content {
        padding: 2rem;
    }

    /* Form Groups */
    .form-group {
        margin-bottom: 2rem;
    }

    .form-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.75rem;
        font-size: 0.875rem;
    }

        .form-label i {
            color: #0ea5e9;
        }

    .required {
        color: #ef4444;
        font-weight: 700;
    }

    /* Input Wrapper */
    .input-wrapper {
        position: relative;
    }

    .form-control {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        background: white;
    }

        .form-control:focus {
            outline: none;
            border-color: #0ea5e9;
            box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);
        }

        .form-control.valid {
            border-color: #10b981;
            background: #f0fdf4;
        }

        .form-control.invalid {
            border-color: #ef4444;
            background: #fef2f2;
        }

    .input-icon {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1.125rem;
    }

    .success-icon {
        color: #10b981;
        display: none;
    }

    .error-icon {
        color: #ef4444;
        display: none;
    }

    .form-control.valid ~ .input-icon .success-icon {
        display: block;
    }

    .form-control.invalid ~ .input-icon .error-icon {
        display: block;
    }

    /* Textarea */
    .textarea {
        resize: vertical;
        min-height: 120px;
        padding-right: 2.5rem;
    }

    .textarea-resize-handle {
        position: absolute;
        bottom: 0.5rem;
        right: 0.5rem;
        color: #94a3b8;
        font-size: 0.875rem;
        pointer-events: none;
    }

    /* Price Input */
    .price-input-wrapper {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .price-input {
        padding-right: 4rem;
    }

    .currency-suffix {
        position: absolute;
        right: 3rem;
        top: 50%;
        transform: translateY(-50%);
        color: #64748b;
        font-weight: 500;
        font-size: 0.875rem;
    }

    .price-suggestions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .price-btn {
        padding: 0.5rem 1rem;
        border: 2px solid #e2e8f0;
        background: white;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 500;
        color: #64748b;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .price-btn:hover {
            border-color: #0ea5e9;
            color: #0ea5e9;
            background: #f0f9ff;
        }

    .price-preview {
        font-size: 0.875rem;
        color: #059669;
        font-weight: 500;
        margin-top: 0.5rem;
    }

    /* Character Count */
    .character-count {
        font-size: 0.75rem;
        color: #94a3b8;
        text-align: right;
        margin-top: 0.25rem;
    }

    /* Validation */
    .alert {
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
    }

    .alert-danger {
        background: #fef2f2;
        border: 1px solid #fecaca;
        color: #dc2626;
    }

    .validation-message {
        color: #ef4444;
        font-size: 0.75rem;
        margin-top: 0.25rem;
        display: block;
    }

    /* Form Actions */
    .form-actions {
        display: flex;
        gap: 1rem;
        padding-top: 1.5rem;
        border-top: 1px solid #e2e8f0;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.875rem 1.5rem;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .btn-primary {
        background: linear-gradient(135deg, #0ea5e9, #0284c7);
        color: white;
    }

        .btn-primary:hover:not(:disabled) {
            background: linear-gradient(135deg, #0284c7, #0369a1);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(14, 165, 233, 0.3);
        }

    .btn-secondary {
        background: #f1f5f9;
        color: #475569;
        border: 1px solid #e2e8f0;
    }

        .btn-secondary:hover {
            background: #e2e8f0;
            color: #334155;
        }

    .btn-outline {
        background: transparent;
        color: #64748b;
        border: 2px solid #e2e8f0;
    }

        .btn-outline:hover {
            background: #f8fafc;
            border-color: #cbd5e1;
            color: #475569;
        }

    .btn-loading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
    }

    .btn.loading .btn-loading {
        display: block;
    }

    .btn.loading span,
    .btn.loading > i {
        opacity: 0;
    }

    /* Preview Card */
    .preview-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        position: sticky;
        top: 2rem;
        max-height: calc(100vh - 4rem);
        overflow-y: auto;
    }

    .preview-content {
        padding: 1.5rem;
    }

    .service-preview {
        border: 2px dashed #e2e8f0;
        border-radius: 8px;
        padding: 1.5rem;
        background: #f8fafc;
    }

    .preview-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .service-icon {
        width: 3rem;
        height: 3rem;
        background: linear-gradient(135deg, #7c3aed, #a855f7);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }

    .service-info h3 {
        font-size: 1.125rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.5rem;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 500;
    }

        .status-badge.active {
            background: #d1fae5;
            color: #065f46;
        }

    .preview-body {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .preview-description h4,
    .preview-price h4 {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
    }

        .preview-description h4 i,
        .preview-price h4 i {
            color: #0ea5e9;
        }

    .preview-description p {
        color: #64748b;
        font-size: 0.875rem;
        line-height: 1.5;
        margin: 0;
    }

    .price-display {
        font-size: 1.25rem;
        font-weight: 700;
        color: #059669;
    }

    .preview-meta {
        padding-top: 1rem;
        border-top: 1px solid #e2e8f0;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.75rem;
        color: #64748b;
    }

        .meta-item i {
            color: #0ea5e9;
        }

    /* Modal */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

        .modal-overlay.show {
            display: flex;
        }

    .modal-content {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        text-align: center;
        animation: modalSlideIn 0.3s ease;
    }

    @@keyframes modalSlideIn {
        from

    {
        opacity: 0;
        transform: translateY(-20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .modal-content.success .modal-icon {
        width: 4rem;
        height: 4rem;
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        margin: 0 auto 1rem;
    }

    .modal-content h3 {
        color: #1e293b;
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .modal-content p {
        color: #64748b;
        margin-bottom: 1.5rem;
    }

    .modal-actions {
        display: flex;
        gap: 1rem;
        justify-content: center;
    }

    /* Responsive */
    @@media (max-width: 1024px) {
        .content-wrapper

    {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .preview-card {
        position: static;
        max-height: none;
    }

    }

    @@media (max-width: 768px) {
        .container

    {
        padding: 0 0.5rem;
    }

    .header-content {
        flex-direction: column;
        text-align: center;
    }

    .form-content {
        padding: 1.5rem;
    }

    .form-actions {
        flex-direction: column;
    }

    .price-suggestions {
        justify-content: center;
    }

    .modal-actions {
        flex-direction: column;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Form elements
        const form = document.getElementById('createServiceForm');
        const nameInput = document.querySelector('input[name="Service.Name"]');
        const descInput = document.querySelector('textarea[name="Service.Description"]');
        const priceInput = document.querySelector('input[name="Service.Price"]');
        const submitBtn = document.getElementById('submitBtn');
        const previewBtn = document.getElementById('previewBtn');

        // Preview elements
        const previewName = document.getElementById('previewName');
        const previewDescription = document.getElementById('previewDescription');
        const previewPriceDisplay = document.getElementById('previewPriceDisplay');
        const pricePreview = document.getElementById('pricePreview');
        const currentDate = document.getElementById('currentDate');

        // Character counters
        const nameCount = document.getElementById('nameCount');
        const descCount = document.getElementById('descCount');

        // Price buttons
        const priceBtns = document.querySelectorAll('.price-btn');

        // Set current date
        currentDate.textContent = new Date().toLocaleDateString('vi-VN');

        // Character counting
        nameInput.addEventListener('input', function() {
            const count = this.value.length;
            nameCount.textContent = count;
            nameCount.style.color = count > 180 ? '#ef4444' : '#94a3b8';
            updatePreview();
            validateField(this);
        });

        descInput.addEventListener('input', function() {
            const count = this.value.length;
            descCount.textContent = count;
            descCount.style.color = count > 900 ? '#ef4444' : '#94a3b8';
            updatePreview();
        });

        // Price input formatting and validation
        priceInput.addEventListener('input', function() {
            // Remove non-numeric characters
            this.value = this.value.replace(/[^0-9]/g, '');
            updatePricePreview();
            updatePreview();
            validateField(this);
        });

        // Price suggestion buttons
        priceBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const price = this.dataset.price;
                priceInput.value = price;
                updatePricePreview();
                updatePreview();
                validateField(priceInput);

                // Visual feedback
                priceBtns.forEach(b => b.style.background = 'white');
                this.style.background = '#f0f9ff';
            });
        });

        // Field validation
        function validateField(field) {
            const value = field.value.trim();
            let isValid = false;

            if (field === nameInput) {
                isValid = value.length >= 3 && value.length <= 200;
            } else if (field === priceInput) {
                isValid = value && parseFloat(value) > 0;
            }

            field.classList.toggle('valid', isValid);
            field.classList.toggle('invalid', !isValid && value.length > 0);
        }

        // Update price preview
        function updatePricePreview() {
            const price = parseFloat(priceInput.value) || 0;
            if (price > 0) {
                pricePreview.textContent = `≈ ${formatPrice(price)}`;
                pricePreview.style.display = 'block';
            } else {
                pricePreview.style.display = 'none';
            }
        }

        // Update live preview
        function updatePreview() {
            const name = nameInput.value.trim() || 'Tên dịch vụ';
            const description = descInput.value.trim() || 'Chưa có mô tả';
            const price = parseFloat(priceInput.value) || 0;

            previewName.textContent = name;
            previewDescription.textContent = description;
            previewPriceDisplay.textContent = formatPrice(price);
        }

        // Format price
        function formatPrice(price) {
            return new Intl.NumberFormat('vi-VN').format(price) + ' VND';
        }

        // Preview button
        previewBtn.addEventListener('click', function() {
            document.getElementById('previewCard').scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        });

        // Form submission
      form.addEventListener('submit', function(e) {
        e.preventDefault();

        // Validate required fields
        let isValid = true;

        if (!nameInput.value.trim() || nameInput.value.trim().length < 3) {
            validateField(nameInput);
            isValid = false;
        }

        if (!priceInput.value || parseFloat(priceInput.value) <= 0) {
            validateField(priceInput);
            isValid = false;
        }

        if (!isValid) {
            // Scroll to first invalid field
            const firstInvalid = document.querySelector('.form-control.invalid');
            if (firstInvalid) {
                firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                firstInvalid.focus();
            }
            return;
        }

        // Show loading state
        submitBtn.classList.add('loading');
        submitBtn.disabled = true;

        // Submit form to backend
        this.submit();
    });

        descInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = Math.min(this.scrollHeight, 300) + 'px';
        });

        updatePreview();

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'Enter') {
                form.dispatchEvent(new Event('submit'));
            }

            if (e.key === 'Escape') {
                const modal = document.querySelector('.modal-overlay.show');
                if (modal) {
                    modal.classList.remove('show');
                }
            }
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
