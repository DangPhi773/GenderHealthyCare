@page
@model GenderHealthcareServiceManagementSystemPages.Pages.CustomerTesting.TrackingTestingModel
@{
    ViewData["Title"] = "Theo dõi tình trạng xét nghiệm";
}

<main class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow-lg p-4" style="backdrop-filter: blur(8px); background-color: rgba(255, 255, 255, 0.95);">
                    <div class="mb-4 text-center">
                        <h2 class="h4 fw-bold text-purple-700">📋 Lịch sử & Trạng thái xét nghiệm</h2>
                        <p class="text-muted">Theo dõi các dịch vụ bạn đã đăng ký và tình trạng xử lý.</p>
                    </div>

                    <form method="get" class="mb-4 d-flex flex-wrap align-items-center gap-2 justify-content-center">
                        <label class="form-label mb-0 me-2">Lọc theo trạng thái:</label>
                        <select name="status" class="form-select w-auto" onchange="this.form.submit()">
                            <option value="">-- Tất cả --</option>
                            <option value="Pending" selected="@("Pending" == Model.SelectedStatus)">Pending</option>
                            <option value="In Progress" selected="@("In Progress" == Model.SelectedStatus)">In Progress</option>
                            <option value="Done" selected="@("Done" == Model.SelectedStatus)">Done</option>
                        </select>
                    </form>

                    @if (Model.UserTests.Count == 0)
                    {
                        <div class="alert alert-info text-center fw-semibold">
                            Bạn chưa có lịch xét nghiệm nào.
                        </div>
                    }
                    else
                    {
                        var groupedTests = Model.UserTests
                        .GroupBy(t => t.AppointmentTime)
                        .OrderBy(g => g.Key);

                        foreach (var group in groupedTests)
                        {
                            <div class="mb-4 p-3 border rounded shadow-sm bg-white">
                                <h5 class="fw-bold text-primary mb-3">
                                    🕒 Thời gian: @group.Key.ToString("HH:mm dd/MM/yyyy")
                                </h5>

                                <div class="table-responsive">
                                    <table class="table table-hover align-middle mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th>#</th>
                                                <th>Dịch vụ</th>
                                                <th>Trạng thái</th>
                                                <th>Kết quả</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var test in group)
                                            {
                                                <tr>
                                                    <td>@test.TestId</td>
                                                    <td>@test.Service?.Name</td>
                                                    <td>
                                                        @switch (test.Status)
                                                        {
                                                            case "Pending":
                                                                <span class="badge bg-warning text-dark">⏳ Pending</span>
                                                                break;
                                                            case "In Progress":
                                                                <span class="badge bg-info text-white">🔄 In Progress</span>
                                                                break;
                                                            case "Done":
                                                                <span class="badge bg-success">✅ Done</span>
                                                                break;
                                                            default:
                                                                <span class="badge bg-secondary">@test.Status</span>
                                                                break;
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (string.IsNullOrEmpty(test.Result))
                                                        {
                                                            <span class="text-muted fst-italic">Chưa có</span>
                                                        }
                                                        else
                                                        {
                                                            @test.Result
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</main>
