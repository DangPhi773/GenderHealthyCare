@page
@model GenderHealthcareServiceManagementSystemPages.Pages.CustomerTesting.TrackingTestingModel
@{
    ViewData["Title"] = "Theo dõi tình trạng xét nghiệm";
}

<main class="py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow-lg p-4 border-0 rounded-4 bg-light">
                    <div class="mb-5 text-center">
                        <h2 class="h4 fw-bold text-gradient-primary">Theo dõi tình trạng xét nghiệm của bạn</h2>
                        <p class="text-muted opacity-75">Cập nhật liên tục về lịch sử và trạng thái xử lý các dịch vụ xét nghiệm đã đăng ký.</p>
                    </div>

                    <form method="get" class="mb-4 d-flex flex-wrap gap-3 justify-content-center">
                        <div class="btn-group" role="group" aria-label="Lọc theo trạng thái">
                            <a href="?status=" class="btn btn-outline-primary @(string.IsNullOrEmpty(Model.SelectedStatus) ? "active" : "") rounded-pill px-3">
                                Tất cả
                            </a>
                            <a href="?status=Pending" class="btn btn-outline-warning @("Pending" == Model.SelectedStatus ? "active" : "") rounded-pill px-3">
                                ⏳ Chờ xử lý
                            </a>
                            <a href="?status=In%20Progress" class="btn btn-outline-info @("In Progress" == Model.SelectedStatus ? "active" : "") rounded-pill px-3">
                                🔄 Đang tiến hành
                            </a>
                            <a href="?status=Done" class="btn btn-outline-success @("Done" == Model.SelectedStatus ? "active" : "") rounded-pill px-3">
                                ✅ Đã hoàn thành
                            </a>
                            <a href="?status=ResultAvailable" class="btn btn-outline-purple @("ResultAvailable" == Model.SelectedStatus ? "active" : "") rounded-pill px-3">
                                📄 Có kết quả
                            </a>
                            <a href="?status=Cancelled" class="btn btn-outline-danger @("Cancelled" == Model.SelectedStatus ? "active" : "") rounded-pill px-3">
                                ❌ Đã hủy
                            </a>
                        </div>
                    </form>

                    @if (Model.UserTests.Count == 0)
                    {
                        <div class="alert alert-info text-center fw-semibold rounded-3 py-4 my-5 animate__animated animate__fadeInUp">
                            <i class="bi bi-info-circle fs-3 me-2"></i>
                            <h4 class="alert-heading mb-2">Bạn chưa có lịch xét nghiệm nào!</h4>
                            <p class="mb-0">Hãy bắt đầu đặt lịch ngay hôm nay để theo dõi sức khỏe của mình.</p>
                            <a href="/CustomerTesting/SelectService" class="btn btn-primary mt-3 rounded-pill px-4">Đặt lịch mới <i class="bi bi-plus-circle ms-2"></i></a>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            @{
                                var groupedTests = Model.UserTests
                                .GroupBy(t => t.AppointmentTime)
                                .OrderByDescending(g => g.Key);
                            }

                            @foreach (var group in groupedTests)
                            {
                                <div class="col-12 mb-4 animate__animated animate__fadeInUp">
                                    <div class="card shadow-sm border-0 rounded-4 overflow-hidden">
                                        <div class="card-header bg-gradient-purple text-white p-3 d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0 fw-bold">
                                                <i class="bi bi-calendar-check me-2"></i>Ngày hẹn: @group.Key.ToString("HH:mm dd/MM/yyyy")
                                            </h5>
                                            <span class="badge bg-light text-primary py-2 px-3 rounded-pill">
                                                @group.Count() xét nghiệm
                                            </span>
                                        </div>
                                        <div class="card-body p-0">
                                            <ul class="list-group list-group-flush">
                                                @foreach (var test in group)
                                                {
                                                    <li class="list-group-item d-flex align-items-center py-3 px-4">
                                                        <div class="flex-grow-1">
                                                            <h6 class="mb-1 fw-bold text-dark">
                                                                <i class="bi bi-clipboard-pulse me-2 text-primary"></i>@test.Service?.Name
                                                            </h6>
                                                            <div class="d-flex flex-wrap align-items-center gap-2 mt-2">
                                                                <span class="badge @GetStatusBadgeClass(test.Status)">
                                                                    @GetStatusText(test.Status)
                                                                </span>
                                                                @if (!string.IsNullOrEmpty(test.Result))
                                                                {
                                                                    <span class="badge bg-success-subtle text-success border border-success-subtle">
                                                                        Kết quả: @test.Result
                                                                    </span>
                                                                }
                                                            </div>
                                                        </div>
                                                        <div class="flex-shrink-0 ms-auto">
                                                            @if (test.Status == "ResultAvailable")
                                                            {
                                                                <form method="post" asp-page-handler="SetTestSession" asp-route-testId="@test.TestId" class="d-inline">
                                                                    <button type="submit" class="btn btn-sm @(Model.FeedbackStatus.GetValueOrDefault(test.TestId) ? "btn-outline-secondary" : "btn-primary") rounded-pill px-3">
                                                                        @(Model.FeedbackStatus.GetValueOrDefault(test.TestId) ? "Đã đánh giá" : "Đánh giá")
                                                                        <i class="bi bi-star-fill ms-2"></i>
                                                                    </button>
                                                                </form>
                                                            }
                                                        </div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "In Progress" => "bg-info text-white",
            "Done" => "bg-success",
            "ResultAvailable" => "bg-primary border border-purple-stronger text-white", 
            "Cancelled" => "bg-danger",
            _ => "bg-secondary",
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "⏳ Chờ xử lý",
            "In Progress" => "🔄 Đang tiến hành",
            "Done" => "✅ Đã hoàn thành",
            "ResultAvailable" => "📄 Có kết quả",
            "Cancelled" => "❌ Đã hủy",
            _ => status,
        };
    }
}

<style>
    /* Gradient cho tiêu đề chính */
    .text-gradient-primary {
        background: linear-gradient(to right, #6f42c1, #0dcaf0); /* Tím sang xanh dương */
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Gradient cho card header */
    .bg-gradient-purple {
        background: linear-gradient(to right, #9333ea, #ec4899); /* Gradient tím-hồng */
    }

    /* Viền và đổ bóng cho card chính */
    .card.shadow-lg {
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08) !important;
    }

    /* Hiệu ứng hover cho list group items */
    .list-group-item:hover {
        background-color: #f8f9fa; /* Màu nền nhẹ khi hover */
        transform: translateX(3px); /* Dịch chuyển nhẹ sang phải */
        transition: all 0.2s ease-in-out;
    }

    /* Badge trạng thái */
    .badge {
        padding: 0.5em 0.75em;
        border-radius: 0.5rem;
        font-weight: 600;
        font-size: 0.85em;
    }

    /* Thêm class cho viền màu tím mạnh hơn */
    .border-purple-stronger {
        border-color: #9333ea !important; /* Màu tím đậm từ gradient chính */
        border-width: 2px !important; /* Tăng độ dày viền để dễ nhìn hơn */
    }

    /* Màu cho badge có kết quả */
    .bg-success-subtle {
        background-color: #d1e7dd !important;
        color: #0f5132 !important;
    }

    /* Tùy chỉnh màu outline button cho đẹp hơn */
    .btn-outline-warning {
        border-color: #ffc107;
        color: #ffc107;
    }

        .btn-outline-warning.active {
            background-color: #ffc107;
            color: #212529;
        }

    .btn-outline-info {
        border-color: #0dcaf0;
        color: #0dcaf0;
    }

        .btn-outline-info.active {
            background-color: #0dcaf0;
            color: #fff;
        }

    /* Thêm định nghĩa cho btn-outline-purple */
    .btn-outline-purple {
        color: #6f42c1; /* Màu tím tương tự text-gradient-primary */
        border-color: #6f42c1;
    }

        .btn-outline-purple:hover, .btn-outline-purple.active {
            background-color: #6f42c1;
            color: white;
        }

    /* CSS cho animation khi không có lịch hẹn */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translate3d(0, 20px, 0);
        }

        to {
            opacity: 1;
            transform: translate3d(0, 0, 0);
        }
    }

    .animate__fadeInUp {
        animation-name: fadeInUp;
        animation-duration: 0.6s;
        animation-fill-mode: both;
    }

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"> 
</style>
