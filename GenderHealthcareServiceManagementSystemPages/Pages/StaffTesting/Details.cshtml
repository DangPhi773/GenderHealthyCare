@page
@model GenderHealthcareServiceManagementSystemPages.Pages.StaffTesting.DetailsModel
@{
    ViewData["Title"] = "Chi tiết xét nghiệm";
}

<main class="test-details-page">
    <div class="container">
        <!-- Header -->
        <div class="page-header">
            <div class="breadcrumb">
                <a asp-page="./Index">Quản lý xét nghiệm</a>
                <span>/</span>
                <span>Chi tiết xét nghiệm</span>
            </div>
            <div class="header-content">
                <div class="header-icon">
                    <i class="bi bi-clipboard2-pulse"></i>
                </div>
                <div class="header-info">
                    <h1>Chi tiết xét nghiệm</h1>
                    <p>Thông tin chi tiết về cuộc hẹn xét nghiệm</p>
                </div>
                <div class="status-indicator">
                    @{
                        var statusClass = Model.Test.Status switch
                        {
                            "Pending" => "pending",
                            "Scheduled" => "scheduled",
                            "Completed" => "completed",
                            "ResultAvailable" => "result-available",
                            "Cancelled" => "cancelled",
                            _ => "pending"
                        };

                        var statusText = Model.Test.Status switch
                        {
                            "Pending" => "Chờ xử lý",
                            "Scheduled" => "Đã lên lịch",
                            "Completed" => "Hoàn thành",
                            "ResultAvailable" => "Có kết quả",
                            "Cancelled" => "Đã hủy",
                            _ => "Chờ xử lý"
                        };

                        var statusIcon = Model.Test.Status switch
                        {
                            "Pending" => "bi-clock",
                            "Scheduled" => "bi-calendar-check",
                            "Completed" => "bi-check-circle",
                            "ResultAvailable" => "bi-file-earmark-check",
                            "Cancelled" => "bi-x-circle",
                            _ => "bi-clock"
                        };
                    }
                    <div class="status-badge @statusClass">
                        <i class="bi @statusIcon"></i>
                        <span>@statusText</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="content-grid">
            <!-- Patient & Service Info -->
            <div class="info-card patient-info">
                <div class="card-header_Test">
                    <div class="card-icon">
                        <i class="bi bi-person-circle"></i>
                    </div>
                    <h3>Thông tin bệnh nhân</h3>
                </div>
                <div class="card-content">
                    <div class="info-item">
                        <div class="info-label">
                            <i class="bi bi-envelope"></i>
                            Email
                        </div>
                        <div class="info-value">
                            @(Model.Test.User?.Email ?? "Chưa có thông tin")
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">
                            <i class="bi bi-heart-pulse"></i>
                            Dịch vụ
                        </div>
                        <div class="info-value service-name">
                            @(Model.Test.Service?.Name ?? "Chưa có thông tin")
                        </div>
                    </div>
                </div>
            </div>

            <!-- Appointment Details -->
            <div class="info-card appointment-info">
                <div class="card-header_Test">
                    <div class="card-icon">
                        <i class="bi bi-calendar-event"></i>
                    </div>
                    <h3>Thông tin lịch hẹn</h3>
                </div>
                <div class="card-content">
                    <div class="info-item">
                        <div class="info-label">
                            <i class="bi bi-clock"></i>
                            Thời gian hẹn
                        </div>
                        <div class="info-value appointment-time">
                            @(Model.Test.AppointmentTime.ToString("dd/MM/yyyy HH:mm") ?? "Chưa xác định")
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">
                            <i class="bi bi-calendar-plus"></i>
                            Ngày tạo
                        </div>
                        <div class="info-value">
                            @(Model.Test.CreatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "Chưa có thông tin")
                        </div>
                    </div>
                </div>
            </div>

            <!-- Test Results -->
            <div class="info-card result-info">
                <div class="card-header_Test">
                    <div class="card-icon">
                        <i class="bi bi-file-earmark-medical"></i>
                    </div>
                    <h3>Kết quả xét nghiệm</h3>
                </div>
                <div class="card-content">
                    @if (!string.IsNullOrEmpty(Model.Test.Result))
                    {
                        <div class="result-content">
                            <div class="result-text">
                                @Model.Test.Result
                            </div>
                            <div class="result-actions">
                                <button class="btn btn-outline" onclick="printResult()">
                                    <i class="bi bi-printer"></i>
                                    In kết quả
                                </button>
                                <button class="btn btn-outline" onclick="downloadResult()">
                                    <i class="bi bi-download"></i>
                                    Tải xuống
                                </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="no-result">
                            <div class="no-result-icon">
                                <i class="bi bi-file-earmark-x"></i>
                            </div>
                            <p>Chưa có kết quả xét nghiệm</p>
                            @if (Model.Test.Status == "Completed")
                            {
                                <button class="btn btn-primary" onclick="uploadResult()">
                                    <i class="bi bi-upload"></i>
                                    Tải lên kết quả
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>

        </div>

        <!-- Action Buttons -->
        <div class="action-section">
            <div class="action-buttons">
                <a asp-page="./Edit" asp-route-id="@Model.Test.TestId" class="btn btn-primary">
                    <i class="bi bi-pencil"></i>
                    Chỉnh sửa
                </a>

                @if (Model.Test.Status == "Pending")
                {
                    <button class="btn btn-success" onclick="scheduleTest()">
                        <i class="bi bi-calendar-check"></i>
                        Lên lịch
                    </button>
                }

                @if (Model.Test.Status == "Scheduled")
                {
                    <button class="btn btn-info" onclick="markCompleted()">
                        <i class="bi bi-check-circle"></i>
                        Đánh dấu hoàn thành
                    </button>
                }

                @if (Model.Test.Status != "Cancelled")
                {
                    <button class="btn btn-warning" onclick="cancelTest()">
                        <i class="bi bi-x-circle"></i>
                        Hủy lịch hẹn
                    </button>
                }

                <a asp-page="./Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i>
                    Quay lại danh sách
                </a>
            </div>
        </div>
    </div>

    <!-- Upload Result Modal -->
    <div class="modal-overlay" id="uploadModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Tải lên kết quả xét nghiệm</h3>
                <button class="modal-close" onclick="closeUploadModal()">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="uploadForm">
                    <div class="form-group">
                        <label>Kết quả xét nghiệm</label>
                        <textarea id="resultText" rows="6" placeholder="Nhập kết quả xét nghiệm..."></textarea>
                    </div>
                    <div class="form-group">
                        <label>Tải lên file đính kèm</label>
                        <div class="file-upload">
                            <input type="file" id="resultFile" accept=".pdf,.jpg,.png,.doc,.docx">
                            <div class="file-upload-text">
                                <i class="bi bi-cloud-upload"></i>
                                <span>Chọn file hoặc kéo thả vào đây</span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-actions">
                <button class="btn btn-primary" onclick="saveResult()">
                    <i class="bi bi-check"></i>
                    Lưu kết quả
                </button>
                <button class="btn btn-secondary" onclick="closeUploadModal()">
                    <i class="bi bi-x"></i>
                    Hủy
                </button>
            </div>
        </div>
    </div>
</main>

<style>
    /* Main Layout */
    .test-details-page {
        min-height: 100vh;
        background: linear-gradient(135deg, #FFD6FF 0%, #E7C6FF 25%, #C8B6FF 50%, #C2C9FF 75%, #BBD0FF 100%);
        padding: 2rem 0;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Header */
    .page-header {
        margin-bottom: 2rem;
    }

    .breadcrumb {
        font-size: 0.875rem;
        color: #6B6B6B;
        margin-bottom: 1rem;
    }

        .breadcrumb a {
            color: #8B5CF6;
            text-decoration: none;
            transition: color 0.3s ease;
        }

            .breadcrumb a:hover {
                color: #7C3AED;
                text-decoration: underline;
            }

    .header-content {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        padding: 2rem;
        border-radius: 16px;
        border: 1px solid rgba(255, 214, 255, 0.3);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .header-icon {
        width: 4rem;
        height: 4rem;
        background: linear-gradient(135deg, #C8B6FF, #C2C9FF);
        color: white;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        flex-shrink: 0;
    }

    .header-info {
        flex: 1;
    }

        .header-info h1 {
            font-size: 2rem;
            font-weight: 700;
            color: #4A4A4A;
            margin-bottom: 0.5rem;
        }

        .header-info p {
            color: #6B6B6B;
            margin: 0;
        }

    .status-indicator {
        flex-shrink: 0;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border-radius: 50px;
        font-size: 0.875rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .status-badge.pending {
            background: linear-gradient(135deg, #FEF3C7, #FDE68A);
            color: #92400E;
            border: 1px solid #F59E0B;
        }

        .status-badge.scheduled {
            background: linear-gradient(135deg, #DBEAFE, #BFDBFE);
            color: #1E40AF;
            border: 1px solid #3B82F6;
        }

        .status-badge.completed {
            background: linear-gradient(135deg, #D1FAE5, #A7F3D0);
            color: #065F46;
            border: 1px solid #10B981;
        }

        .status-badge.result-available {
            background: linear-gradient(135deg, #E0E7FF, #C7D2FE);
            color: #3730A3;
            border: 1px solid #6366F1;
        }

        .status-badge.cancelled {
            background: linear-gradient(135deg, #FEE2E2, #FECACA);
            color: #991B1B;
            border: 1px solid #EF4444;
        }

    /* Content Grid */
    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .info-card {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        border: 1px solid rgba(255, 214, 255, 0.3);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .info-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

    .card-header_Test {
        background: linear-gradient(135deg, #F8FAFC, #F1F5F9);
        padding: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        border-bottom: 1px solid rgba(255, 214, 255, 0.2);
    }

    .card-icon {
        width: 2.5rem;
        height: 2.5rem;
        background: linear-gradient(135deg, #C8B6FF, #C2C9FF);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.25rem;
    }

    .card-header_Test h3 {
        font-size: 1.125rem;
        font-weight: 600;
        color: #4A4A4A;
        margin: 0;
    }

    .card-content {
        padding: 1.5rem;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        margin-bottom: 1.25rem;
    }

        .info-item:last-child {
            margin-bottom: 0;
        }

    .info-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: #6B6B6B;
    }

        .info-label i {
            color: #C8B6FF;
        }

    .info-value {
        font-size: 1rem;
        color: #4A4A4A;
        font-weight: 500;
    }

    .service-name {
        color: #8B5CF6;
        font-weight: 600;
    }

    .appointment-time {
        color: #059669;
        font-weight: 600;
        font-size: 1.125rem;
    }

    .cancel-reason .info-value {
        color: #DC2626;
        font-style: italic;
    }

    .status-active {
        color: #059669;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-inactive {
        color: #DC2626;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    /* Result Section */
    .result-content {
        text-align: center;
    }

    .result-text {
        background: #F8FAFC;
        padding: 1.5rem;
        border-radius: 12px;
        border-left: 4px solid #C8B6FF;
        margin-bottom: 1rem;
        white-space: pre-wrap;
        text-align: left;
    }

    .result-actions {
        display: flex;
        gap: 0.75rem;
        justify-content: center;
    }

    .no-result {
        text-align: center;
        padding: 2rem 0;
    }

    .no-result-icon {
        width: 4rem;
        height: 4rem;
        background: linear-gradient(135deg, #F3F4F6, #E5E7EB);
        color: #9CA3AF;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        margin: 0 auto 1rem;
    }

    .no-result p {
        color: #6B6B6B;
        margin-bottom: 1rem;
    }

    /* Action Section */
    .action-section {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        padding: 2rem;
        border: 1px solid rgba(255, 214, 255, 0.3);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .btn-primary {
        background: linear-gradient(135deg, #C8B6FF, #C2C9FF);
        color: white;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #B794F6, #A78BFA);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(200, 182, 255, 0.4);
        }

    .btn-success {
        background: linear-gradient(135deg, #10B981, #059669);
        color: white;
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #059669, #047857);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
        }

    .btn-info {
        background: linear-gradient(135deg, #3B82F6, #2563EB);
        color: white;
    }

        .btn-info:hover {
            background: linear-gradient(135deg, #2563EB, #1D4ED8);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
        }

    .btn-warning {
        background: linear-gradient(135deg, #F59E0B, #D97706);
        color: white;
    }

        .btn-warning:hover {
            background: linear-gradient(135deg, #D97706, #B45309);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
        }

    .btn-secondary {
        background: #F3F4F6;
        color: #4A4A4A;
        border: 1px solid #D1D5DB;
    }

        .btn-secondary:hover {
            background: #E5E7EB;
            color: #1F2937;
        }

    .btn-outline {
        background: transparent;
        color: #C8B6FF;
        border: 1px solid #C8B6FF;
    }

        .btn-outline:hover {
            background: #C8B6FF;
            color: white;
        }

    /* Modal */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

        .modal-overlay.show {
            display: flex;
        }

    .modal-content {
        background: white;
        border-radius: 16px;
        max-width: 500px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        animation: modalSlideIn 0.3s ease;
    }

    @@keyframes modalSlideIn {
        from

    {
        opacity: 0;
        transform: translateY(-20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .modal-header {
        padding: 1.5rem;
        border-bottom: 1px solid #E5E7EB;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .modal-header h3 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #4A4A4A;
            margin: 0;
        }

    .modal-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        color: #6B7280;
        cursor: pointer;
        padding: 0.25rem;
        border-radius: 4px;
        transition: background-color 0.2s;
    }

        .modal-close:hover {
            background: #F3F4F6;
        }

    .modal-body {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

        .form-group label {
            display: block;
            font-weight: 500;
            color: #4A4A4A;
            margin-bottom: 0.5rem;
        }

        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #D1D5DB;
            border-radius: 8px;
            font-size: 0.875rem;
            resize: vertical;
            transition: border-color 0.2s;
        }

            .form-group textarea:focus {
                outline: none;
                border-color: #C8B6FF;
                box-shadow: 0 0 0 3px rgba(200, 182, 255, 0.1);
            }

    .file-upload {
        border: 2px dashed #D1D5DB;
        border-radius: 8px;
        padding: 2rem;
        text-align: center;
        transition: border-color 0.2s;
        cursor: pointer;
    }

        .file-upload:hover {
            border-color: #C8B6FF;
        }

        .file-upload input {
            display: none;
        }

    .file-upload-text {
        color: #6B7280;
    }

        .file-upload-text i {
            font-size: 2rem;
            margin-bottom: 0.5rem;
            display: block;
            color: #C8B6FF;
        }

    .modal-actions {
        padding: 1.5rem;
        border-top: 1px solid #E5E7EB;
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .container

    {
        padding: 0 0.5rem;
    }

    .header-content {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
    }

    .content-grid {
        grid-template-columns: 1fr;
    }

    .action-buttons {
        flex-direction: column;
    }

    .result-actions {
        flex-direction: column;
    }

    }

    @@media (max-width: 480px) {
        .modal-content

    {
        width: 95%;
        margin: 1rem;
    }

    .modal-actions {
        flex-direction: column;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize tooltips and animations
        initializeAnimations();
    });

    function initializeAnimations() {
        // Animate cards on scroll
        const cards = document.querySelectorAll('.info-card');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        });

        cards.forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
        });
    }

    function scheduleTest() {
        if (confirm('Bạn có chắc chắn muốn lên lịch cho xét nghiệm này?')) {
            // Add loading state
            event.target.innerHTML = '<i class="bi bi-hourglass-split"></i> Đang xử lý...';
            event.target.disabled = true;

            // Simulate API call
            setTimeout(() => {
                alert('Đã lên lịch thành công!');
                location.reload();
            }, 1500);
        }
    }

    function markCompleted() {
        if (confirm('Bạn có chắc chắn xét nghiệm này đã hoàn thành?')) {
            // Add loading state
            event.target.innerHTML = '<i class="bi bi-hourglass-split"></i> Đang xử lý...';
            event.target.disabled = true;

            // Simulate API call
            setTimeout(() => {
                alert('Đã đánh dấu hoàn thành!');
                location.reload();
            }, 1500);
        }
    }

    function cancelTest() {
        const reason = prompt('Vui lòng nhập lý do hủy:');
        if (reason && reason.trim()) {
            // Add loading state
            event.target.innerHTML = '<i class="bi bi-hourglass-split"></i> Đang xử lý...';
            event.target.disabled = true;

            // Simulate API call
            setTimeout(() => {
                alert('Đã hủy lịch hẹn!');
                location.reload();
            }, 1500);
        }
    }

    function uploadResult() {
        document.getElementById('uploadModal').classList.add('show');
    }

    function closeUploadModal() {
        document.getElementById('uploadModal').classList.remove('show');
        document.getElementById('uploadForm').reset();
    }

    function saveResult() {
        const resultText = document.getElementById('resultText').value;
        const resultFile = document.getElementById('resultFile').files[0];

        if (!resultText.trim() && !resultFile) {
            alert('Vui lòng nhập kết quả hoặc chọn file!');
            return;
        }

        // Add loading state
        event.target.innerHTML = '<i class="bi bi-hourglass-split"></i> Đang lưu...';
        event.target.disabled = true;

        // Simulate API call
        setTimeout(() => {
            alert('Đã lưu kết quả thành công!');
            closeUploadModal();
            location.reload();
        }, 2000);
    }

    function printResult() {
        window.print();
    }

    function downloadResult() {
        // Simulate download
        alert('Đang tải xuống kết quả...');
    }

    // File upload handling
    document.addEventListener('DOMContentLoaded', function() {
        const fileUpload = document.querySelector('.file-upload');
        const fileInput = document.getElementById('resultFile');

        if (fileUpload && fileInput) {
            fileUpload.addEventListener('click', () => fileInput.click());

            fileUpload.addEventListener('dragover', (e) => {
                e.preventDefault();
                fileUpload.style.borderColor = '#C8B6FF';
            });

            fileUpload.addEventListener('dragleave', () => {
                fileUpload.style.borderColor = '#D1D5DB';
            });

            fileUpload.addEventListener('drop', (e) => {
                e.preventDefault();
                fileUpload.style.borderColor = '#D1D5DB';

                const files = e.dataTransfer.files;
                if (files.length > 0) {
                    fileInput.files = files;
                    updateFileUploadText(files[0].name);
                }
            });

            fileInput.addEventListener('change', (e) => {
                if (e.target.files.length > 0) {
                    updateFileUploadText(e.target.files[0].name);
                }
            });
        }
    });

    function updateFileUploadText(filename) {
        const uploadText = document.querySelector('.file-upload-text span');
        if (uploadText) {
            uploadText.textContent = `Đã chọn: ${filename}`;
        }
    }

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            const modal = document.querySelector('.modal-overlay.show');
            if (modal) {
                modal.classList.remove('show');
            }
        }
    });
</script>
