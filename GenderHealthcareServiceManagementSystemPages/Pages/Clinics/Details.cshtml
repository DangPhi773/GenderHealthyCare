@page "{id:int}"
@model GenderHealthcareServiceManagementSystemPages.Pages.Clinics.DetailsModel


@{
    ViewData["Title"] = "Details";
}

<style>
    body {
        background: linear-gradient(to bottom right, #f9f3ff, #ffeaf7, #ebf0ff);
        font-size: 20px;
    }

    .icon-decor {
        height: 40px;
        width: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .decor {
        background: white;
        border-radius: 8px;
    }

    textarea,
    input {
        background: none;
        border: none;
        padding: 0px 10px;
    }

        textarea,
        input:focus {
            outline: none;
        }

    .btn-decor {
        background: none;
        color: #9333ea;
        border: 1px solid #ced4da;
        transition: all 0.2s ease;
    }

        .btn-decor:hover {
            border-color: transparent;
            color: white;
            background: linear-gradient(to right, #9333ea, #ec4899);
        }

    .hidden {
        display: none !important;
    }
</style>


<div class="mb-4 mt-4 card-decor">

    <div class="row d-flex flex-column align-items-end">
        <div class="col-12 d-flex justify-content-end mb-2">
            <a asp-page="Index"
               class="text-decoration-none p-1 col-1 btn-close">
            </a>
        </div>
        <form method="post"
              asp-page-handler="UpdateClinic"
              class="col-12 d-flex justify-content-evenly">
            <input type="hidden" asp-for="Clinic.ClinicId" />
            <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content border-danger">
                        <div class="modal-header bg-danger text-white">
                            <h5 class="modal-title" id="deleteConfirmModalLabel">Xác nhận xóa</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                        </div>
                        <div class="modal-body">
                            Bạn có chắc chắn muốn xóa phòng khám này không?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>

                            <button type="submit" name="action" value="delete" class="btn btn-danger" id="confirmDeleteBtn">Xác nhận xóa</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="rounded col-4 position-relative" style="height:450px;border:2px solid black">
                @if (Model.Clinic.Image != null && Model.Clinic.Image.Length > 0)
                {
                    <img id="clinicImagePreview" src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Clinic.Image))"
                         alt="Clinic Image"
                         class="img-fluid rounded"
                         style="width: 100%; height: 100%; object-fit: cover;" />
                }
                else
                {
                    <img id="clinicImagePreview" src="/images/default-clinic.png" {{-- Hoặc đường dẫn ảnh mặc định của bạn --}}
                         alt="Default Clinic Image"
                         class="img-fluid rounded"
                         style="width: 100%; height: 100%; object-fit: cover;" />
                }

                <div class="position-absolute bottom-0 end-0 p-2">
                    <input type="file" id="imageUpload" name="imageUpload" accept="image/*" class="hidden" />
                    <button type="button" id="uploadImageBtn" class="btn btn-sm btn-primary">
                        <i class="bi bi-camera"></i> Thêm ảnh
                    </button>
                </div>
            </div>


            <div class="text-start col-7" style="padding:0">

                <div class="d-flex col-12 justify-content-between">
                    <h3 class="fw-semibold col-10">
                        <input asp-for="Clinic.Name" style="width:100%" type="text" readonly />
                        <span asp-validation-for="Clinic.Name" class="text-danger small"></span>
                    </h3>
                    @if (Model.Clinic.IsDeleted == false)
                    {
                        @* button edit *@
                        <button style="border:none;"
                                id="editBtn"
                                type="button"
                                class="btn btn-light btn-decor col-1 d-flex align-items-center justify-content-center">
                            <i class="bi bi-vector-pen"></i>
                        </button>
                        @* button save *@
                        <button style="border:none"
                                name="action"
                                value="update"
                                id="saveBtn"
                                type="submit"
                                class="btn btn-light btn-decor col-1 d-flex align-items-center justify-content-center hidden">
                            <i class="bi bi-check-lg"></i>
                        </button>
                        @* button delete *@
                        <button type="button"
                                style="border:none;"
                                id="deleteBtn"
                                class="btn btn-light btn-decor col-1 d-flex align-items-center justify-content-center"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteConfirmModal">
                            <i class="bi bi-trash3"></i>
                        </button>
                    }

                </div>
                <hr />
                @* Phone *@
                <div class="row" style="line-height:3">
                    <div class="mb-1 small text-truncate d-flex flex-column align-items-end">
                        <div class="d-flex align-items-center col-12 justify-content-between">
                            <div class="icon-decor col-3" style="background:#CEF4FF">
                                <i class="bi bi-telephone"></i>
                            </div>
                            <input asp-for="Clinic.Phone"
                                   class="col-11"
                                   type="text"
                                   readonly />
                        </div>
                        <div class="col-11">
                            <span asp-validation-for="Clinic.Phone" class="text-danger small d-block"></span>
                        </div>
                    </div>
                    @* Email *@
                    <div class="mb-1 small text-truncate d-flex flex-column align-items-end">
                        <div class="d-flex align-items-center col-12 justify-content-between">
                            <div class="icon-decor col-3" style="background:#FFCDDE">
                                <i class="bi bi-envelope-at"></i>
                            </div>
                            <input asp-for="Clinic.Email"
                                   class="col-11"
                                   type="text"
                                   readonly />
                        </div>
                        <div class="col-11">
                            <span asp-validation-for="Clinic.Email" class="text-danger small d-block"></span>
                        </div>
                    </div>

                    @* Address *@
                    <div class="mb-1 small d-flex align-items-center col-12 justify-content-between">
                        <div class="icon-decor col-3" style="background:#C8B6FF">
                            <i class="bi bi-house-door"></i>
                        </div>
                        <input asp-for="Clinic.Address"
                               class="col-11"
                               type="text"
                               readonly />
                    </div>
                    @* Description *@
                    <div class="mb-0 small text-truncate">
                        <textarea asp-for="Clinic.Description"
                                  class="col-12"
                                  style="resize:none;height:200px;"
                                  readonly></textarea>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>

@section Scripts {
    <script>
        const editBtn = document.getElementById('editBtn');
        const saveBtn = document.getElementById('saveBtn');
        const fields = document.querySelectorAll('input:not([type=hidden]), textarea');

        // Elements for image upload
        const uploadImageBtn = document.getElementById('uploadImageBtn');
        const imageUploadInput = document.getElementById('imageUpload');
        const clinicImagePreview = document.getElementById('clinicImagePreview');

        // Event listener for edit button
        editBtn.addEventListener('click', () => {
            fields.forEach(f => {
                f.removeAttribute('readonly');
                f.classList.add("decor");
            });
            editBtn.classList.add('hidden');
            saveBtn.classList.remove('hidden');
        });

        // Event listener for "Thêm ảnh" button
        uploadImageBtn.addEventListener('click', () => {
            imageUploadInput.click(); // Kích hoạt input file ẩn
        });

        // Event listener when a file is selected
        imageUploadInput.addEventListener('change', async (event) => {
            const file = event.target.files[0];
            if (file) {
                // Display image preview
                const reader = new FileReader();
                reader.onload = function (e) {
                    clinicImagePreview.src = e.target.result;
                };
                reader.readAsDataURL(file);

                // Create a FormData object to send the file
                const formData = new FormData();
                formData.append('imageUpload', file); // 'imageUpload' matches the [BindProperty] name in backend
                formData.append('clinicId', @Model.Clinic.ClinicId); // Pass clinic ID

                try {
                    const response = await fetch('?handler=UploadImage', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    if (response.ok) {
                        const result = await response.json();
                        if (result.success) {
                            alert('Tải ảnh lên thành công!');
                            // You might want to refresh the page or update the image source dynamically
                            // For simplicity, we just show an alert here.
                            // Location.reload() can be used for a full refresh if needed.
                        } else {
                            alert('Tải ảnh lên thất bại: ' + result.message);
                        }
                    } else {
                        alert('Lỗi server khi tải ảnh lên.');
                    }
                } catch (error) {
                    console.error('Lỗi khi tải ảnh lên:', error);
                    alert('Đã xảy ra lỗi trong quá trình tải ảnh lên.');
                }
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}